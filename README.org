#+TITLE: MPV scripts

** Leader
*** Setup
Copy =leader.lua= to your =~~/scripts= directory and =script-modules/leader.lua= to
your =~~/script-modules= directory.

Options below are default, if you want to change any of those - put those in
=~~/scripts-opts/leader.conf=

#+begin_src conf
leader_key=,
pause_on_open=false
resume_on_exit=only-if-was-paused # another possible value is true
hide_timeout=2 # timeout in seconds to hide menu
which_key_timeout=1 # timeout in seconds to show which-key menu
strip_cmd_at=28 # max symbols for cmd names in which-key menu

# styles
font_size=21
menu_x_padding=3 # this padding for now applies only to 'left', not x
which_key_menu_y_padding=3
#+end_src

*** Binding talbe format
Example can be found in the script file itself.

: {'key', 'name', 'description', [innerBindings]}

**** Key
Any key you desire

**** Name
Can be one of:
- full command name :: means it is not a script-defined command, will look like
  ~"add contrast 1"~. Full list of all commands can be found using my [[*M-x][M-x]] script.
- prefix :: literally ~'prefix'~ string, which will tell the script that there are
  following bindings after this one.
- script command name :: To set binding to a *script command* look for this
  command /name/, which is passed as 2nd argument to ~mp.add_key_binding~ or
  ~mp.add_forced_key_binding~ and usually can be found in its script file.
  This field *must* be unique. Examples:

#+begin_src lua
-- here command name is "M-x"
mp.add_key_binding(opts.toggle_menu_binding, "M-x", function()
                     mx_menu:init(data)
end)

-- here command name is "chapters-menu"
mp.add_key_binding(opts.toggle_menu_binding, "chapters-menu", function()
                     chapter_menu:init(chapter)
end)
#+end_src
**** Description
String that describes what the command that is bound to this binding does. In
case =name= field is ~'prefix'~ for your convenience i'd suggest setting 1-3 word
description. For example for ~a~ prefix /audio/ description, /subtitles/ description
for ~s~ prefix etc.

**** Inner bindings
Only being used with keys that are prefixes. Includes keys following that prefix
key, consista of same format tables - {'key', 'name', 'description',
[innerBindings]}. Key field within this table is being concatenated with all
parent prefixes.

~{'s', 'prefix', 'subtitles', {'a', 'prefix', ... {'+', 'increase-font', ...}}}~
will result in ~sa+~ keybinding for ~increase-font~ command.

*** Passing bindings talbe to script-module
Pass it to ~set_leader_bindings~ func, which can be found in the end of
=~~/scripts/leader.lua=

*** Todos [0/3]
**** TODO Find good spot to sort bindings by key, to show in which-key in alphabetical order
**** TODO Integrate leader bindings with M-x script
Make leader bindings appear in M-x menu

**** TODO Move my bidings table somewhere else
In future plans i want to move my keybinding object definition out of the script file so the user just has an example somewhere.

**** TODO Upon init set all leader bindings to M-x and merge it there
I don't wana risk and mess something up by merging leader bindings with native
prop so ima just merge those with script inner value

#+begin_src lua
mp.commandv("script-message-to", "user_input", "request-user-input", opts)

-- and register them in script itself
mp.register_script_message("request-user-input", function(...)
    local success, err = pcall(input_request, ...)
    if not success then msg.error(err) end
end)

#+end_src
** M-x
Copy =M-x.lua= to your =~~/scripts= directory and =script-modules/extended-menu.lua=
to your =~~/script-modules= directory.

*Keybidings* you can see in [[file:script-modules/README.org::*Usage (keybindings)][extended menu]] keybindings section.

*** Options
Options below are default and all of them are used only in =extended-menu=.

If you want to change any of those - put those in =~~/scripts-opts/M-x.conf=

#+begin_src conf
strip_cmd_at=65 # strip cmd name

#- options for extended menu ------------------------------------------------
toggle_menu_binding=t
lines_to_show=17
pause_on_open=true
resume_on_exit=only-if-was-paused # another possible value is true

#- styles
font_size=21
line_bottom_margin=1
menu_x_padding=5
menu_y_padding=2

search_heading=M-x # heading text of a search bar
filter_by_fields=[ "cmd", "key", "comment" ] # look for explanation below
#+end_src

~filter_by_fields~ option will determine in which fields to look for your search
query. For instance if you don't want to search in comments to commands then
just omit it from initial table.

** Chapters menu
Copy =M-x.lua= to your =~~/scripts= directory and =script-modules/extended-menu.lua=
to your =~~/script-modules= directory.

Since this script is also using =extended-menu= it has pretty much the same
options as [[*M-x][M-x]]. If you want to change any of those - put those in
=~~/scripts-opts/M-x.conf=

#+begin_src conf
toggle_menu_binding=g
lines_to_show=17
pause_on_open=true
resume_on_exit=only-if-was-paused

# styles
font_siz=1
line_bottom_margin=1
menu_x_padding=5
menu_y_padding=2

search_heading=Select chapter
index_field=index
filter_by_fields=[ "content" ]
#+end_src

Keybidings you can see in [[file:script-modules/README.org::*Usage (keybindings)][extended menu]] keybindings section.
